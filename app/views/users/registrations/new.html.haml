.container.mx-auto.w-50.p-6.m-5
  .bg-white.rounded-xl.shadow-lg.overflow-hidden.p-8
    .text-center.mb-8
      %i{class: 'fas fa-car text-4xl mb-4', style: 'color: #3a6363'}
      %h2.text-3xl.font-bold.text-gray-800.mb-2 Sign Up
      %p.text-gray-600 Create an account to rent your next ride

    = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { class: "space-y-6" }) do |f|
      - if params[:car_id].present?
        = hidden_field_tag :car_id, params[:car_id]
      - if params[:start_date].present?
        = hidden_field_tag :start_date, params[:start_date]
      - if params[:end_date].present?
        = hidden_field_tag :end_date, params[:end_date]

      .field.space-y-2
        = f.label :first_name, class: "block text-sm font-medium text-gray-700"
        = f.text_field :first_name,
          autofocus: true,
          class: "w-full px-4 py-3 rounded-lg border border-gray-300 transition duration-200",
          placeholder: "John",
          onfocus: "this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.1)'",
          onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"

      .field.space-y-2
        = f.label :last_name, class: "block text-sm font-medium text-gray-700"
        = f.text_field :last_name,
          class: "w-full px-4 py-3 rounded-lg border border-gray-300 transition duration-200",
          placeholder: "Doe",
          onfocus: "this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.1)'",
          onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"

      .field.space-y-2
        = f.label :email, class: "block text-sm font-medium text-gray-700"
        = f.email_field :email,
          class: "w-full px-4 py-3 rounded-lg border border-gray-300 transition duration-200",
          placeholder: "your@email.com",
          onfocus: "this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.1)'",
          onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"

      .field.space-y-2
        = f.label :phone, class: "block text-sm font-medium text-gray-700"
        .relative
          .absolute.inset-y-0.left-0.pl-4.flex.items-center.pointer-events-none
            %i.fas.fa-phone.text-gray-400
          = f.text_field :phone,
            class: "w-full pl-12 pr-4 py-3 rounded-lg border border-gray-300 transition duration-200",
            placeholder: "+971 50 123 4567",
            onfocus: "this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.1)'",
            onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"

      .field.space-y-2
        = f.label :whatsapp_number, class: "block text-sm font-medium text-gray-700" do
          %span WhatsApp Number
          %i.fab.fa-whatsapp.text-green-500.ml-1
        .relative
          .absolute.inset-y-0.left-0.pl-4.flex.items-center.pointer-events-none
            %i.fab.fa-whatsapp.text-green-500.text-lg
          = f.telephone_field :whatsapp_number,
            class: "w-full pl-12 pr-4 py-3 rounded-lg border border-gray-300 transition duration-200",
            placeholder: "+971501234567",
            pattern: '\+[0-9]{7,15}',
            title: 'Enter phone number with country code (e.g., +971501234567)',
            onfocus: "this.style.borderColor='#25D366'; this.style.boxShadow='0 0 0 3px rgba(37, 211, 102, 0.1)'",
            onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"
        %small.text-gray-500.text-xs.block.mt-1 Include country code (e.g., +971501234567)

      .field.space-y-2
        = f.label :nationality, 'Are you a Resident or a Tourist?', class: "block text-sm font-medium text-gray-700"
        .flex.gap-6.items-center
          %label.flex.items-center.gap-2.cursor-pointer.text-gray-700
            = f.radio_button :nationality, 'resident', required: true, class: "form-radio h-4 w-4 border-gray-300 transition", style: "color: #3a6363; accent-color: #3a6363"
            %span Resident (UAE Resident)
          %label.flex.items-center.gap-2.cursor-pointer.text-gray-700
            = f.radio_button :nationality, 'tourist', required: true, class: "form-radio h-4 w-4 border-gray-300 transition", style: "color: #3a6363; accent-color: #3a6363"
            %span Tourist (Foreign Tourist)

      .field.space-y-2
        = f.label :password, class: "block text-sm font-medium text-gray-700"
        .relative
          = f.password_field :password,
            autocomplete: "new-password",
            class: "w-full px-4 py-3 pr-12 rounded-lg border border-gray-300 transition duration-200",
            placeholder: "••••••••",
            onfocus: "this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.1)'",
            onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"
          %button.absolute.right-3.top-3.text-gray-400.hover:text-gray-600.transition{type: "button", onclick: "togglePassword(this)"}
            %i.fas.fa-eye

      .field.space-y-2
        = f.label :password_confirmation, class: "block text-sm font-medium text-gray-700"
        = f.password_field :password_confirmation,
          class: "w-full px-4 py-3 rounded-lg border border-gray-300 transition duration-200",
          placeholder: "Confirm password",
          onfocus: "this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.1)'",
          onblur: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'"

      .field.flex.items-center
        = f.check_box :terms_accepted, required: true, id: "user_agree_terms", class: "h-4 w-4 border-gray-300 rounded transition", style: "color: #3a6363; accent-color: #3a6363"
        = f.label :terms_accepted, class: "ml-2 block text-sm text-gray-700" do
          | I agree to the
          %a.font-medium.transition-colors.hover:underline{href: "#", onclick: "openTermsModal(); return false;", tabindex: 0, role: "button", style: "color: #3a6363"} Terms & Conditions

      .actions
        = f.submit "Create Account",
          class: "w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white transition duration-200 hover:shadow-md",
          style: "background-color: #3a6363; hover:background-color: #2d4d4d"
    
    / Divider
    .relative.my-6
      .absolute.inset-0.flex.items-center
        .w-full{style: 'border-top: 1px solid #e5e7eb'}
      .relative.flex.justify-center.text-sm
        %span.px-3.bg-white.text-gray-500 Or continue with

    / Residency type selection for Google Sign-Up
    .field.space-y-2.mt-6.mb-6
      %label.block.text-sm.font-medium.text-gray-700 Are you a Resident or a Tourist?
      .flex.gap-6.items-center.mt-2
        %label.flex.items-center.gap-2.cursor-pointer.text-gray-700
          = radio_button_tag 'user[nationality]', 'resident', false, required: true, class: "form-radio h-4 w-4 border-gray-300 transition", style: "accent-color: #3a6363;"
          %span Resident (UAE Resident)
        %label.flex.items-center.gap-2.cursor-pointer.text-gray-700
          = radio_button_tag 'user[nationality]', 'tourist', false, required: true, class: "form-radio h-4 w-4 border-gray-300 transition", style: "accent-color: #3a6363;"
          %span Tourist (Foreign Tourist)

    / Google Sign Up Button (modified to capture nationality)
    = button_to user_google_oauth2_omniauth_authorize_path, method: :post, data: { turbo: false },
        id: "google-signup-btn",
        disabled: true,
        class: "w-full flex items-center justify-center px-4 py-3 border border-gray-300 shadow-sm text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed",
        style: "hover:border-color: #3a6363",
        onmouseover: "if(!this.disabled) { this.style.borderColor='#3a6363'; this.style.boxShadow='0 0 0 3px rgba(58, 99, 99, 0.05)' }",
        onmouseout: "this.style.borderColor='#d1d5db'; this.style.boxShadow='none'" do
      %svg.w-5.h-5.mr-3{viewBox: "0 0 24 24"}
        %path{fill: "#4285F4", d: "M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"}
        %path{fill: "#34A853", d: "M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"}
        %path{fill: "#FBBC05", d: "M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"}
        %path{fill: "#EA4335", d: "M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"}
      Sign up with Google

    .mt-6.text-center
      Already have an account?
      - login_url = new_session_path(resource_name)
      - if params[:car_id].present? || params[:start_date].present? || params[:end_date].present?
        - login_url += "?#{request.query_string}"
      = link_to "Log in", login_url, class: "font-medium hover:underline transition-colors", style: "color: #3a6363"

    - if alert
      .mt-4.p-3.bg-red-50.text-red-700.rounded-lg.text-sm.border.border-red-200= alert
    - if notice
      .mt-4.p-3.text-green-700.rounded-lg.text-sm.border{style: 'background-color: #f0f9f0; border-color: #3a6363'}= notice

  / Terms and Conditions Modal - Larger size with scrollable content
  #terms-modal.fixed.inset-0.z-50.flex.items-center.justify-center.bg-black.bg-opacity-50{style: "display:none"}
    .bg-white.rounded-xl.shadow-2xl{class: "w-11/12 max-w-4xl h-5/6 p-4 relative flex flex-col"}
      / Header
      .flex.items-center.justify-between.pb-4.border-b.border-gray-200
        %h3.text-2xl.font-bold.text-gray-800 Terms & Conditions
        %button.text-gray-400.hover:text-gray-600.text-3xl.font-bold.bg-transparent.border-0.transition{type: "button", onclick: "closeTermsModal()", title: "Close"} ×
      
      / Content Area with Scroll
      .flex-1.overflow-y-auto.px-2.py-4.custom-scrollbar
        = render 'shared/terms_and_conditions_content'
      
      / Footer with Action Button
      .pt-4.border-t.border-gray-200
        .flex.justify-end.space-x-3
          %button.text-gray-600.font-semibold.py-2.px-4.rounded-lg.border.border-gray-300.hover:bg-gray-50.transition{type: "button", onclick: "closeTermsModal()"} Cancel
          %button.text-white.font-semibold.py-2.px-6.rounded-lg.shadow-md.transition.duration-200.hover:shadow-lg{type: "button", onclick: "acceptTerms()", style: "background-color: #3a6363; hover:background-color: #2d4d4d"} I Accept Terms

:css
  / Custom scrollbar styling for terms modal
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: #3a6363 #f1f5f9;
  }
  
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 3px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: #3a6363;
    border-radius: 3px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: #2d4d4d;
  }

  / Ensure bullet points are visible in terms modal
  #terms-modal .text-gray-700 ul,
  #terms-modal ul.text-gray-700 {
    list-style-type: disc !important;
    padding-left: 1.5rem !important;
    margin-left: 0.5rem !important;
    list-style-position: outside !important;
  }
  
  #terms-modal li {
    display: list-item !important;
    margin-bottom: 0.5rem !important;
    padding-left: 0.25rem !important;
  }
  
  / Override any Tailwind CSS resets
  #terms-modal ul[class*="text-gray"] {
    list-style-type: disc !important;
  }

:javascript
  function togglePassword(button) {
    const input = button.previousElementSibling
    const icon = button.querySelector('i')
    if (input.type === 'password') {
      input.type = 'text'
      icon.classList.replace('fa-eye', 'fa-eye-slash')
    } else {
      input.type = 'password'
      icon.classList.replace('fa-eye-slash', 'fa-eye')
    }
  }

  function openTermsModal() {
    console.log('Opening terms modal...'); // Debug line
    document.getElementById('terms-modal').style.display = 'flex';
  }
  
  function closeTermsModal() {
    document.getElementById('terms-modal').style.display = 'none';
  }
  
  function acceptTerms() {
    // Check the terms checkbox if it exists
    const checkbox = document.getElementById('user_agree_terms')
    if (checkbox) {
      checkbox.checked = true
    }
    
    // Close the modal
    closeTermsModal()
    
    // Optional: Show a confirmation message
    const termsLink = document.querySelector('[onclick="openTermsModal()"]')
    if (termsLink) {
      termsLink.style.color = '#3a6363'
      termsLink.textContent = termsLink.textContent.replace('Read', '✓ Read')
    }
  }

  // Enhanced styling for form elements
  document.addEventListener('DOMContentLoaded', function() {
    // Style radio buttons and checkbox with the theme color
    const radioButtons = document.querySelectorAll('input[type="radio"]');
    const checkbox = document.querySelector('input[type="checkbox"]');
    
    radioButtons.forEach(radio => {
      radio.style.accentColor = '#3a6363';
    });
    
    if (checkbox) {
      checkbox.style.accentColor = '#3a6363';
    }
  });

:javascript
  function togglePassword(button) {
    const input = button.previousElementSibling
    const icon = button.querySelector('i')
    if (input.type === 'password') {
      input.type = 'text'
      icon.classList.replace('fa-eye', 'fa-eye-slash')
    } else {
      input.type = 'password'
      icon.classList.replace('fa-eye-slash', 'fa-eye')
    }
  }

  function openTermsModal() {
    console.log('Opening terms modal...');
    document.getElementById('terms-modal').style.display = 'flex';
  }
  
  function closeTermsModal() {
    document.getElementById('terms-modal').style.display = 'none';
  }
  
  function acceptTerms() {
    // Check the terms checkbox if it exists
    const checkbox = document.getElementById('user_agree_terms')
    if (checkbox) {
      checkbox.checked = true
    }
    
    // Close the modal
    closeTermsModal()
    
    // Optional: Show a confirmation message
    const termsLink = document.querySelector('[onclick="openTermsModal()"]')
    if (termsLink) {
      termsLink.style.color = '#3a6363'
      termsLink.textContent = termsLink.textContent.replace('Read', '✓ Read')
    }
  }

  // Enhanced styling for form elements and nationality handling
  document.addEventListener('DOMContentLoaded', function() {
    // Get all form elements
    const radioButtons = document.querySelectorAll('input[name="user[nationality]"]');
    const googleButton = document.getElementById('google-signup-btn');
    const checkbox = document.querySelector('input[type="checkbox"]');
    
    // Style radio buttons with the theme color
    radioButtons.forEach(radio => {
      radio.style.accentColor = '#3a6363';
      
      // Enable Google button when nationality is selected
      radio.addEventListener('change', function() {
        if (this.checked && googleButton) {
          googleButton.disabled = false;
          googleButton.classList.remove('opacity-50', 'cursor-not-allowed');
        }
      });
    });
    
    // Style checkbox with the theme color
    if (checkbox) {
      checkbox.style.accentColor = '#3a6363';
    }
    
    // Handle Google OAuth button click - capture nationality
    if (googleButton) {
      googleButton.addEventListener('click', function(e) {
        const selectedNationality = document.querySelector('input[name="user[nationality]"]:checked');
        
        if (!selectedNationality) {
          e.preventDefault();
          alert('Please select whether you are a Resident or Tourist before continuing with Google signup.');
          return false;
        }
        
        // Store in sessionStorage as backup
        sessionStorage.setItem('oauth_nationality', selectedNationality.value);
        
        // Add hidden field to the form
        const form = this.closest('form');
        let nationalityInput = form.querySelector('input[name="nationality"]');
        
        if (!nationalityInput) {
          nationalityInput = document.createElement('input');
          nationalityInput.type = 'hidden';
          nationalityInput.name = 'nationality';
          form.appendChild(nationalityInput);
        }
        
        nationalityInput.value = selectedNationality.value;
        
        console.log('Nationality captured:', selectedNationality.value);
      });
    }
    
    // Check if nationality is already selected on page load
    const checkedNationality = document.querySelector('input[name="user[nationality]"]:checked');
    if (checkedNationality && googleButton) {
      googleButton.disabled = false;
      googleButton.classList.remove('opacity-50', 'cursor-not-allowed');
    }
  });