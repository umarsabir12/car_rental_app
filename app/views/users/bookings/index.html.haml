.w-full.min-h-screen.bg-gradient-to-br.from-blue-50.to-blue-100
  .px-4.md:px-12.lg:px-32
    
    = render 'shared/user_header'
    
    .mx-auto
      / Back Button
      .mb-6
        = link_to user_home_path, class: 'inline-flex items-center text-blue-600 hover:text-blue-800 font-semibold transition-colors' do
          %i.fas.fa-arrow-left.mr-2
          Back to Dashboard
    
  .bg-white.rounded-3xl.shadow-xl.p-8.mt-0.mx-auto
    / Flash messages
    - if flash[:alert]
      .mb-8.p-4.bg-red-50.border-l-4.border-red-500.rounded-lg.text-red-700.font-medium.flex.items-center
        %i.fas.fa-exclamation-circle.mr-3.text-lg
        = flash[:alert]

    / Header
    .container
      .flex.items-center.justify-between.mb-8
        %h2.text-3xl.font-bold.text-gray-900.flex.items-center
          %i.fas.fa-calendar-alt.mr-4.text-blue-600.text-2xl
          - if params[:filter] == 'active'
            Active Bookings
          - elsif params[:filter] == 'cancelled'
            Cancelled Bookings
          - else
            My Bookings
        .flex.items-center.space-x-4
          / Filter Dropdown
          .relative
            = form_with url: users_bookings_path, method: :get, local: true, class: 'flex items-center', id: 'filter-form' do |f|
              .relative
                = f.select :filter, 
                    options_for_select([['All Bookings', 'all'],['Active Bookings', 'active'],['Cancelled Bookings', 'cancelled']], params[:filter] || 'all'),{},
                    { class: 'appearance-none bg-white border border-gray-300 rounded-lg px-4 py-2 pr-8 text-sm font-medium text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors shadow-sm hover:border-gray-400',id: 'booking-filter',onchange: 'this.form.submit()'}
                .absolute.inset-y-0.right-0.flex.items-center.pr-2.pointer-events-none
                  %i.fas.fa-chevron-down.text-gray-400.text-xs

      / Filter Summary
      - if @bookings.any? || params[:filter].present?
        .mb-6.p-4.bg-blue-50.rounded-lg.border.border-blue-200
          .flex.items-center.justify-between
            .flex.items-center
              %i.fas.fa-filter.mr-2.text-blue-600
              %span.text-sm.font-medium.text-blue-800
                - case params[:filter]
                - when 'active'
                  Showing #{@bookings.count} active booking#{@bookings.count == 1 ? '' : 's'} (pending and confirmed)
                - when 'cancelled'
                  Showing #{@bookings.count} cancelled booking#{@bookings.count == 1 ? '' : 's'}
                - else
                  Showing #{@bookings.count} booking#{@bookings.count == 1 ? '' : 's'} (all statuses)
            - if params[:filter].present? && params[:filter] != 'all'
              = link_to 'Clear Filter', users_bookings_path, class: 'text-sm text-blue-600 hover:text-blue-800 underline'

      / Bookings List
      - if @bookings.any?
        .space-y-8
          - @bookings.each do |booking|
            .bg-white.rounded-2xl.shadow-md.hover:shadow-lg.transition-shadow.duration-300.border.border-gray-100.overflow-hidden.relative
              / Cancel Button - Top Right
              - if (booking.status == 'pending' || booking.status == 'confirmed') && !booking.payment_processed?
                .absolute.top-4.right-4.z-10
                  = button_to users_cancel_booking_path(booking.id), 
                      method: :patch,
                      class: 'bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded-2 text-sm font-medium transition-all duration-200 shadow-md hover:shadow-lg flex items-center',
                      data: { confirm: 'Are you sure you want to cancel this booking? This action cannot be undone.',turbo_confirm: 'Are you sure you want to cancel this booking? This action cannot be undone.'} do
                    %i.fas.fa-times.mr-1
                    Cancel
              
              .flex.flex-col.lg:flex-row
                / Car Image Section
                .relative.w-full.lg.bg-gray-50.flex.items-center.justify-center.p-6.w-50
                  .w-full.h-48.bg-gray-100.rounded-lg.overflow-hidden
                    = car_main_image(booking.car, size: [400, 300])
                  / Status Badge
                  .absolute.top-4.left-4
                    - badge_class = case booking.status
                    - when 'confirmed' then 'bg-green-100 text-green-800'
                    - when 'pending' then 'bg-yellow-100 text-yellow-800'
                    - when 'cancelled' then 'bg-red-100 text-red-800'
                    - else 'bg-gray-100 text-gray-800'
                    %span.inline-flex.items-center.px-3.py-1.rounded-full.text-sm.font-medium.shadow-sm{class: badge_class}
                      - if booking.status == 'confirmed'
                        %i.fas.fa-check-circle.mr-2
                      - elsif booking.status == 'pending'
                        %i.fas.fa-clock.mr-2
                      - elsif booking.status == 'cancelled'
                        %i.fas.fa-times-circle.mr-2
                      = booking.status.titleize

                / Details Section
                .flex-1.p-6
                  .flex.flex-col.h-full
                    / Car Info
                    %div
                      %h3.text-2xl.font-bold.text-gray-900.mb-2= "#{booking.car&.brand} #{booking.car&.model}"
                      .flex.flex-wrap.items-center.gap-x-6.gap-y-3.mb-4
                        .flex.items-center.text-gray-600
                          %i.fas.fa-calendar.mr-2.text-blue-500
                          = booking.car&.year
                        .flex.items-center.text-gray-600
                          %i.fas.fa-palette.mr-2.text-purple-500
                          = booking.car&.color
                        .flex.items-center.text-gray-600
                          %i.fas.fa-tag.mr-2.text-green-500
                          = booking.car&.category
                      .text-xl.font-semibold.text-blue-600.mb-4
                        = number_to_currency(booking.car&.price)
                        %span.text-sm.font-normal.text-gray-500.ml-1 per day

                    / Rental Period
                    .bg-gray-50.rounded-xl.mb-6.flex.items-center.justify-between
                      
                      .bg-gray-50.rounded-xl.p-3.flex.items-center.justify-between.text-sm
                        .flex.items-center.space-x-4
                          .flex.items-center
                            %i.fas.fa-calendar-day.mr-2.text-blue-500
                            %span.font-medium= booking.start_date.strftime('%b %d')
                          %i.fas.fa-arrow-right.text-gray-400
                          .flex.items-center
                            %i.fas.fa-calendar-day.mr-2.text-blue-500
                            %span.font-medium= booking.end_date.strftime('%b %d, %Y')
                          .flex.items-center.border-l.border-gray-200.pl-4.ml-2
                            %i.fas.fa-clock.mr-2.text-blue-500
                            %span.font-bold.text-blue-600= pluralize((booking.end_date - booking.start_date).to_i, 'day')

                    / Payment Section
                    .mt-auto.pt-4.border-t.border-gray-200
                      .flex.flex-col.sm:flex-row.items-start.sm:items-center.justify-between.gap-4
                        .flex-1
                          %p.text-sm.text-gray-500 Total Amount
                          %p.text-2xl.font-bold.text-green-600
                            = number_to_currency(booking.car&.price * (booking.end_date - booking.start_date).to_i)



                        - if booking.payment_processed?
                          .bg-green-50.text-green-700.px-5.py-2.rounded-lg.font-medium.border.border-green-200.flex.items-center
                            %i.fas.fa-check-circle.mr-2
                            Payment Confirmed
                        - else
                          - has_flash_alert = flash[:alert].present?
                          - if has_flash_alert
                            .payment-disabled.bg-gray-300.text-gray-500.px-6.py-3.rounded-lg.font-semibold.cursor-not-allowed.flex.items-center.justify-center.min-w-40.opacity-60{ title: 'Payment is disabled until your documents are approved' }
                              %i.fas.fa-lock.mr-2
                              Payment
                          - else
                            - unless booking.status == 'cancelled'
                              = link_to users_payment_path(booking.id), 
                                  class: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white px-6 py-3 rounded-lg font-semibold hover:from-blue-700 hover:to-blue-800 transition-all duration-200 shadow-md hover:shadow-lg flex items-center justify-center min-w-40',
                                  data: { turbo: false } do
                                %i.fas.fa-credit-card.mr-2
                                Pay Now
                        

      - else
        .text-center.py-16
          .max-w-md.mx-auto
            .bg-gray-50.rounded-3xl.p-8.flex.flex-col.items-center
              .w-20.h-20.rounded-full.bg-blue-50.flex.items-center.justify-center.mb-6
                %i.fas.fa-calendar-times.text-3xl.text-blue-400
              %h3.text-xl.font-semibold.text-gray-800.mb-3 No Bookings Yet
              %p.text-gray-600.mb-6 It looks like you haven't made any bookings yet. Browse our collection to find your perfect car.
              = link_to root_path, class: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white font-semibold py-3 px-8 rounded-lg shadow hover:from-blue-700 hover:to-blue-800 transition-all duration-200 inline-flex items-center space-x-2' do
                %i.fas.fa-car
                %span Explore Cars
:javascript
  document.addEventListener('DOMContentLoaded', function() {
    // Enhanced cancel booking confirmation
    document.querySelectorAll('form[action*="/cancel"]').forEach(function(form) {
      form.addEventListener('submit', function(e) {
        if (!confirm('Are you sure you want to cancel this booking? This action cannot be undone.')) {
          e.preventDefault();
          return false;
        }
      });
    });
    
    // Filter dropdown enhancement
    const filterSelect = document.getElementById('booking-filter');
    if (filterSelect) {
      filterSelect.addEventListener('change', function() {
        // Add loading state
        const form = document.getElementById('filter-form');
        if (form) {
          const submitButton = document.createElement('button');
          submitButton.type = 'submit';
          submitButton.style.display = 'none';
          form.appendChild(submitButton);
          submitButton.click();
        }
      });
    }
    
    // Check if there's a flash alert (indicating pending documents)
    const hasFlashAlert = document.querySelector('.bg-red-50') !== null;
    
    if (hasFlashAlert) {
      // Disable all payment buttons when documents are pending
      document.querySelectorAll('a[href*="/payments"]').forEach(function(link) {
        // Replace the link with a disabled button
        const disabledButton = document.createElement('div');
        disabledButton.className = 'payment-disabled bg-gray-300 text-gray-500 px-6 py-3 rounded-lg font-semibold cursor-not-allowed flex items-center justify-center min-w-40 opacity-60';
        disabledButton.innerHTML = '<i class="fas fa-lock mr-2"></i>Payment Disabled';
        disabledButton.title = 'Payment is disabled until your documents are approved';
        
        // Add click handler to show message
        disabledButton.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          alert("Payment is currently disabled. Please wait for your documents to be approved before proceeding with payment.");
        });
        
        link.parentNode.replaceChild(disabledButton, link);
      });
      
      // Also handle any payment-disabled elements that might already exist
      document.querySelectorAll('.payment-disabled').forEach(function(disabledBtn) {
        disabledBtn.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          alert("Payment is currently disabled. Please wait for your documents to be approved before proceeding with payment.");
        });
      });
    }
    
    // Original pay button logic for other cases
    document.querySelectorAll('.pay-btn').forEach(function(btn) {
      btn.addEventListener('click', function(e) {
        if (btn.dataset.pendingDocs === 'true') {
          e.preventDefault();
          alert("Your documents are under review. We'll notify you once they're approved, and you can proceed with your booking.");
        }
      });
    });
  });
