.w-full.min-h-screen.bg-gradient-to-br.from-blue-50.to-blue-100
  .px-4.md:px-12.lg:px-32
    
    .relative.bg-blue-700.text-white.rounded-b-3xl.shadow-xl.overflow-hidden.p-10.flex.flex-col.md:flex-row.items-center.gap-8.mb-12
      / Background image layer
      -# .absolute.inset-0.bg-cover.bg-center.opacity-30.pointer-events-none{ style: "background-image: url('https://images.unsplash.com/photo-1503736334956-4c8f8e92946d?auto=format&fit=crop&w=900&q=80');" }
      / Content layer
      .relative.z-10.flex-1
        %h1.text-4xl.font-extrabold.mb-2 Hello, #{@user.first_name.presence || @user.email.split('@').first}!
        %p.text-blue-100.mt-1.text-lg Welcome to your dashboard
      .relative.z-10.flex-shrink-0
        %i.fas.fa-user-circle.text-7xl.text-blue-200

    .mx-auto
      .flex.border-b.mb-8.bg-white.rounded-t-2xl.shadow-lg.overflow-hidden
        %button.tab-btn.py-4.px-8.text-lg.font-semibold.text-blue-700.bg-white.border-b-2.border-blue-600{type: "button", id: "tab-documents", onclick: "showTab('documents')"} Documents
        %button.tab-btn.py-4.px-8.text-lg.font-semibold.text-gray-500.hover:text-blue-700.bg-white{type: "button", id: "tab-bookings", onclick: "showTab('bookings')"} Bookings
        %button.tab-btn.py-4.px-8.text-lg.font-semibold.text-gray-500.hover:text-blue-700.bg-white{type: "button", id: "tab-profile", onclick: "showTab('profile')"} Profile
        -# %button.tab-btn.py-4.px-8.text-lg.font-semibold.text-gray-500.hover:text-blue-700.bg-white{type: "button", id: "tab-card", onclick: "showTab('card')"} Credit Card
      
      #tab-content-documents.tab-content.flex.justify-start.bg-white.rounded-b-2xl.shadow-2xl.p-8.mt-0
        .w-full
          %h2.text-xl.font-semibold.text-gray-600.mb-6.flex.items-center.gap-2
            %i.fas.fa-file-upload.text-blue-400
            Upload Documents
          / Document cards row
          .grid.grid-cols-1.sm:grid-cols-2.md:grid-cols-3.lg:grid-cols-3.xl:grid-cols-3.gap-8.w-full
            - current_user.documents.each do |doc|
              .bg-gray-50.rounded-xl.shadow-sm.p-6.flex.flex-col.items-center.border.border-gray-200.w-full.min-h-260
                %i.fas.fa-file-alt.text-2xl.mb-2.text-gray-400
                %span.font-semibold.text-gray-800.mb-1= doc.doc_name
                - status_color = doc.status == 'not uploaded' ? 'text-red-600' : doc.status == 'approved' ? 'text-green-700' : 'text-yellow-700'
                %span.inline-block.rounded-full.px-3.py-1.text-xs.font-semibold.mb-2{class: status_color}= doc.status.titleize
                - if doc.images.attached?
                  %button.bg-gray-200.text-gray-800.px-4.py-2.rounded-lg.hover:bg-gray-300.transition.font-semibold.text-xs{type: "button", onclick: "openPreviewModal('#{doc.doc_name.parameterize}')"} Preview
                - else
                  %button.bg-blue-600.text-white.px-4.py-2.rounded-lg.hover:bg-blue-700.transition.font-semibold.text-xs{type: "button", onclick: "openUploadModal('#{doc.doc_name.parameterize}', '#{doc.doc_name}')"} Upload

      #tab-content-bookings.hidden.tab-content.bg-white.rounded-b-2xl.shadow-lg.p-8.mt-0
        - if flash[:alert]
          .mb-8.p-4.bg-red-100.border-l-4.border-red-500.rounded.text-red-700.font-semibold.text-center= flash[:alert]
        %h2.text-xl.font-semibold.text-gray-600.mb-4 Bookings
        - if @bookings.any?
          .grid.grid-cols-1.md:grid-cols-2.gap-8
            - @bookings.each do |booking|
              .bg-white.rounded-xl.shadow-md.p-6.flex.flex-lg-fill.justify-between.relative
                / Car Info
                .flex.items-center.gap-4.mb-4
                  - if booking.car&.main_image_url.present?
                    %img.w-100.h-24.object-cover.rounded.shadow{src: booking.car.main_image_url, alt: booking.car.model}
                  - else
                    %span.inline-block.w-20.h-14.bg-blue-100.flex.items-center.justify-center.rounded.text-blue-400 N/A
                  .flex-1
                    %div.font-bold.text-blue-900= booking.car&.model || 'N/A'
                    %div.text-sm.text-gray-500= booking.car&.brand || '-'
                    %div.text-xs.text-gray-400= booking.car&.year || '-'
                / Booking Dates & Status
                .flex.items-center.justify-between.mb-2
                  %div
                    %span.text-xs.text-gray-500 Start:
                    %span.font-semibold= booking.start_date.strftime('%b %d, %Y')
                    %span.text-xs.text-gray-500.ml-2 End:
                    %span.font-semibold= booking.end_date.strftime('%b %d, %Y')
                  -# %div
                    - status_classes = {'Available' => 'bg-green-100 text-green-700','Rented' => 'bg-red-100 text-red-700'}[booking.status] || 'bg-blue-100 text-blue-700'
                    %span.inline-block.rounded-full.text-xs.font-semibold.px-3.py-1{ class: status_classes }= booking.status
                / Payment
                .flex.items-center.justify-between
                  %div
                    - if booking.payment_processed?
                      %span.inline-block.bg-green-100.text-green-700.px-3.py-1.rounded-full.text-xs.font-semibold Paid
                    - elsif flash[:alert]
                      %span.inline-block.bg-yellow-200.text-yellow-700.font-bold.px-4.py-1.rounded-full.text-xs.shadow.cursor-not-allowed(title='Please complete your documents to proceed with payment.') Pay
                    - else
                      = link_to 'Pay', payment_path(booking), 
                          class: 'inline-block bg-yellow-400 text-yellow-900 font-bold px-4 py-1 rounded-full text-xs shadow hover:bg-yellow-500 transition pay-btn',
                          data: { pending_docs: (current_user.has_required_pending_document? ? 'true' : 'false') }
              
        - else
          %p.text-gray-500.mt-4 You have no bookings yet.

      #tab-content-profile.hidden.tab-content.bg-white.rounded-b-2xl.shadow-lg.p-8.mt-0
        %h2.text-xl.font-semibold.text-gray-600.mb-4 Profile
        %div.space-y-2
          %p.text-gray-700.flex.items-center.gap-2
            %i.fas.fa-user.text-blue-600
            %strong Name:
            = [@user.first_name, @user.last_name].compact.join(' ')
          %p.text-gray-700.flex.items-center.gap-2
            %i.fas.fa-envelope.text-blue-600
            %strong Email:
            = @user.email
          %p.text-gray-700.flex.items-center.gap-2
            %i.fas.fa-phone.text-blue-600
            %strong Phone:
            = @user.phone.presence || '-'
          %p.text-gray-700.flex.items-center.gap-2
            %i.fas.fa-home.text-blue-600
            %strong Address:
            = @user.home_address.presence || '-'
        %div.mt-6
          = link_to 'Edit Profile', edit_user_registration_path, class: 'inline-block bg-blue-600 text-white font-bold px-6 py-2 rounded-lg shadow hover:bg-blue-700 transition'

  / Upload Modals
  - current_user.documents.each do |doc|
    %div{ id: "modal-#{doc.doc_name.parameterize}", class: "fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden" }
      .bg-white.rounded-2xl.shadow-2xl.p-12.max-w-2xl.w-full.mx-4.min-h-400
        %h3.text-xl.font-bold.text-blue-700.mb-4
          = "Upload #{doc.doc_name}"
        - if ['Home country driving license and IDP', 'A Valid UAE driving license', 'Emirates ID front and back'].include?(doc.doc_name)
          %p.text-sm.text-gray-600.mb-4 You need to upload front and back pictures of your document.
          = form_with url: documents_path, method: :post, local: true, html: {multipart: true, class: 'space-y-4', onsubmit: 'return validateLicenseUpload(this);'} do |f|
            .flex-col.md:flex-row.gap-4
              .flex-1
                %label.text-sm.font-semibold.text-gray-700.mb-2 Front Side
                = f.file_field :front_image, class: 'block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition', required: true
              .flex-1
                %label.text-sm.font-semibold.text-gray-700.mb-2 Back Side
                = f.file_field :back_image, class: 'block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition', required: true
            = f.hidden_field :id, value: doc.id
            .flex.gap-3
              = f.submit 'Upload', class: 'flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold hover:bg-blue-700 transition'
              %button.flex-1.bg-gray-300.text-gray-700.px-4.py-2.rounded-lg.font-semibold.hover:bg-gray-400.transition{type: "button", onclick: "closeUploadModal('#{doc.doc_name.parameterize}')"} Cancel
        - else
          = form_with url: documents_path, method: :post, local: true, html: {multipart: true, class: 'space-y-4'} do |f|
            = f.file_field :images, multiple: true, class: 'block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-3 bg-blue-50 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition', required: true
            = f.hidden_field :id, value: doc.id
            .flex.gap-3
              = f.submit 'Upload', class: 'flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold hover:bg-blue-700 transition'
              %button.flex-1.bg-gray-300.text-gray-700.px-4.py-2.rounded-lg.font-semibold.hover:bg-gray-400.transition{type: "button", onclick: "closeUploadModal('#{doc.doc_name.parameterize}')"} Cancel

  / Preview Modals
  - current_user.documents.each do |doc|
    - if doc.images.attached?
      %div{ id: "preview-modal-#{doc.doc_name.parameterize}", class: "fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 hidden", onclick: "closePreviewModalOnOutside(event, '#{doc.doc_name.parameterize}')" }
        .bg-white.rounded-2xl.shadow-2xl.overflow-hidden.max-w-4xl.w-full.h-80.mx-4.relative.flex.flex-col.items-center.justify-center{onclick: "event.stopPropagation();"}
          -# Modal Title (optional)
          -# %h3.text-2xl.font-bold.text-blue-700.mb-6= "#{doc.doc_name} Preview"
          - if doc.images.count == 2 && (doc.doc_name == 'Home country driving license and IDP' || doc.doc_name == 'A Valid UAE driving license' || doc.doc_name == 'Emirates ID front and back')
            .flex.gap-8.items-center.justify-center
              .flex.flex-col.items-center.mx-4
                %img.w-full.h-full.max-h-80.object-contain.rounded-2xl.shadow-lg{ src: url_for(doc.images[0]), alt: 'Front Side' }
                %span.mt-2.text-sm.text-gray-700.font-semibold Front Side
              .flex.flex-col.items-center.mx-4
                %img.w-full.h-full.max-h-80.object-contain.rounded-2xl.shadow-lg{ src: url_for(doc.images[1]), alt: 'Back Side' }
                %span.mt-2.text-sm.text-gray-700.font-semibold Back Side
          - else
            .flex-1.flex.items-center.justify-center.w-full.h-full.my-4
              - doc.images.each do |img|
                .p-4
                  %img.w-full.h-full.object-contain.rounded-2xl.shadow-lg{ src: url_for(img), alt: doc.doc_name, style: "max-height: 80vh; max-width: 100%;" }
          - if doc.reason.present?
            .absolute.bottom-0.left-0.right-0.bg-red-600.bg-opacity-80.text-white.text-center.p-4.text-lg.font-semibold.rounded-b-2xl
              | Reason: 
              %span.font-semibold= doc.reason

:javascript
  function showTab(tab) {
    document.querySelectorAll('.tab-btn').forEach(btn => {
      btn.classList.remove('text-blue-700', 'border-b-2', 'border-blue-600');
      btn.classList.add('text-gray-500');
    });
    document.getElementById('tab-' + tab).classList.add('text-blue-700', 'border-b-2', 'border-blue-600');
    document.getElementById('tab-' + tab).classList.remove('text-gray-500');
    document.querySelectorAll('.tab-content').forEach(el => el.classList.add('hidden'));
    document.getElementById('tab-content-' + tab).classList.remove('hidden');
  }
  // Show documents tab by default
  document.addEventListener('DOMContentLoaded', function() {
    showTab('documents');
  });
  document.addEventListener('DOMContentLoaded', function() {
    var select = document.getElementById('has-license-select');
    var yesSection = document.querySelector('.yes-section');
    var noSection = document.querySelector('.no-section');
    // Show yes-section by default
    yesSection.classList.remove('hidden');
    noSection.classList.add('hidden');
    if (select) {
      select.addEventListener('change', function() {
        if (this.value === 'yes') {
          yesSection.classList.remove('hidden');
          noSection.classList.add('hidden');
        } else if (this.value === 'no') {
          noSection.classList.remove('hidden');
          yesSection.classList.add('hidden');
        } else {
          yesSection.classList.add('hidden');
          noSection.classList.add('hidden');
        }
      });
    }
  });

  function handleNationalityChange() {
    var uaeSet = document.getElementById('uae-docs-set');
    var foreignSet = document.getElementById('foreign-docs-set');
    var selected = document.querySelector('input[name="user_type"]:checked').value;
    // Show correct doc set
    if (selected === 'uae_resident') {
      uaeSet.classList.remove('hidden');
      foreignSet.classList.add('hidden');
    } else {
      uaeSet.classList.add('hidden');
      foreignSet.classList.remove('hidden');
    }
    // Map to enum value
    var nationality = (selected === 'uae_resident') ? 'local' : 'tourist';
    // AJAX call to update nationality
    fetch('/user/update_nationality', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      },
      body: JSON.stringify({ nationality: nationality })
    })
    .then(response => response.json())
    .then(data => {
      // Optionally show a toast or feedback
    });
  }
  document.addEventListener('DOMContentLoaded', function() {
    handleNationalityChange();
  });

  function openUploadModal(field, name) {
    document.getElementById('modal-' + field).classList.remove('hidden');
  }
  
  function closeUploadModal(field) {
    document.getElementById('modal-' + field).classList.add('hidden');
  }

  function openPreviewModal(field) {
    document.getElementById('preview-modal-' + field).classList.remove('hidden');
  }
  function closePreviewModal(field) {
    document.getElementById('preview-modal-' + field).classList.add('hidden');
  }

  function closePreviewModalOnOutside(event, field) {
    if (event.target.classList.contains('bg-black') || event.target.classList.contains('bg-opacity-40')) {
      closePreviewModal(field);
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.pay-btn').forEach(function(btn) {
      btn.addEventListener('click', function(e) {
        if (btn.dataset.pendingDocs === 'true') {
          e.preventDefault();
          alert("Your documents are under review. We’ll notify you once they’re approved, and you can proceed with your booking.");
        }
      });
    });
  });

  function validateLicenseUpload(form) {
    var front = form.querySelector('input[name="front_image"]');
    var back = form.querySelector('input[name="back_image"]');
    if (!front.files.length || !back.files.length) {
      alert('Both front and back images are required.');
      return false;
    }
    return true;
  }


