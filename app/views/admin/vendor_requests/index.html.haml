.max-w-7xl.mx-auto.px-4.sm:px-6.lg:px-8.pt-24.pb-10
  .flex.justify-between.items-center.mb-8
    %h1.text-3xl.font-bold{ style: 'color: #2d4f4f' } Vendor Join Requests
    .flex.gap-3
      = link_to 'All', admin_vendor_requests_path,
        class: "px-4 py-2 rounded-lg #{params[:status].blank? ? 'text-white bg-[#2d4f4f]' : 'bg-gray-100 text-gray-700'}"
      = link_to 'Pending', admin_vendor_requests_path(status: 'pending'),
        class: "px-4 py-2 rounded-lg #{params[:status] == 'pending' ? 'bg-yellow-500 text-white' : 'bg-gray-100 text-gray-700'}"
      = link_to 'Approved', admin_vendor_requests_path(status: 'approved'),
        class: "px-4 py-2 rounded-lg #{params[:status] == 'approved' ? 'bg-green-500 text-white' : 'bg-gray-100 text-gray-700'}"
      = link_to 'Rejected', admin_vendor_requests_path(status: 'rejected'),
        class: "px-4 py-2 rounded-lg #{params[:status] == 'rejected' ? 'bg-red-500 text-white' : 'bg-gray-100 text-gray-700'}"

  - if @vendor_requests.blank?
    .bg-white.rounded-xl.shadow-sm.p-8.text-center.text-gray-600
      No vendor requests found.
  - else
    .bg-white.rounded-xl.shadow-lg.overflow-hidden
      .overflow-x-auto
        %table.min-w-full.divide-y.divide-gray-200
          %thead.bg-gray-50
            %tr
              %th.px-6.py-3.text-left.text-xs.font-medium.text-gray-500.uppercase.tracking-wider Name
              %th.px-6.py-3.text-left.text-xs.font-medium.text-gray-500.uppercase.tracking-wider Email
              %th.px-6.py-3.text-left.text-xs.font-medium.text-gray-500.uppercase.tracking-wider Description
              %th.px-6.py-3.text-left.text-xs.font-medium.text-gray-500.uppercase.tracking-wider Status
              %th.px-6.py-3.text-left.text-xs.font-medium.text-gray-500.uppercase.tracking-wider Submitted
              %th.px-6.py-3.text-left.text-xs.font-medium.text-gray-500.uppercase.tracking-wider Actions

          %tbody.bg-white.divide-y.divide-gray-200
            - @vendor_requests.each do |request|
              %tr.hover:bg-gray-50
                %td.px-6.py-4.whitespace-nowrap
                  .text-sm.font-medium.text-gray-900= request.full_name
                %td.px-6.py-4.whitespace-nowrap
                  .text-sm.text-gray-900= request.email
                %td.px-6.py-4.whitespace-nowrap
                  - if request.description.present?
                    %button.px-3.py-1.text-white.text-xs.rounded-lg.transition{ onclick: "openDescriptionModal(#{request.id})", style: "background-color: #3A6363;" } View
                  - else
                    %span.text-sm.text-gray-400 N/A
                %td.px-6.py-4.whitespace-nowrap
                  - case request.status
                  - when 'pending'
                    %span.px-3.py-1.inline-flex.text-xs.font-semibold.rounded-full.bg-yellow-100.text-yellow-800 Pending
                  - when 'approved'
                    %span.px-3.py-1.inline-flex.text-xs.font-semibold.rounded-full.bg-green-100.text-green-800 Approved
                  - when 'rejected'
                    %span.px-3.py-1.inline-flex.text-xs.font-semibold.rounded-full.bg-red-100.text-red-800 Rejected
                %td.px-6.py-4.whitespace-nowrap
                  .text-sm.text-gray-500= request.created_at.strftime('%b %d, %Y')
                %td.px-6.py-4.whitespace-nowrap.text-sm.font-medium
                  - if request.pending?
                    .flex.gap-2
                      = button_to 'Approve', approve_admin_vendor_request_path(request),
                        method: :patch,
                        class: 'px-3 py-1 bg-green-500 text-white rounded-lg hover:bg-green-600 transition',
                        data: { confirm: 'Are you sure you want to approve this request?' }
                      = button_to 'Reject', reject_admin_vendor_request_path(request),
                        method: :patch,
                        class: 'px-3 py-1 bg-red-500 text-white rounded-lg hover:bg-red-600 transition',
                        data: { confirm: 'Are you sure you want to reject this request?' }
                  - else
                    %span.text-gray-400 No actions

    / -------------------- Summary Stats --------------------
    .mt-6.grid.grid-cols-1.md:grid-cols-3.gap-4
      .bg-white.rounded-lg.shadow.p-4.text-center
        .text-2xl.font-bold.text-yellow-600= VendorRequest.pending.count
        .text-sm.text-gray-600 Pending Requests
      .bg-white.rounded-lg.shadow.p-4.text-center
        .text-2xl.font-bold.text-green-600= VendorRequest.approved.count
        .text-sm.text-gray-600 Approved Requests
      .bg-white.rounded-lg.shadow.p-4.text-center
        .text-2xl.font-bold.text-red-600= VendorRequest.rejected.count
        .text-sm.text-gray-600 Rejected Requests


/ -------------------- Description Modal --------------------
#descriptionModal.hidden.fixed.inset-0.bg-gray-800.bg-opacity-50.flex.items-center.justify-center.transition-opacity.duration-300{ style: 'z-index: 9999;' }
  .bg-white.rounded-2xl.shadow-xl.p-6.relative.transform.transition-transform.duration-300.scale-95{ class: "w-11/12 md:w-3/4 lg:w-1/2" }
    .flex.justify-between.items-center.mb-4
      %h3.text-xl.font-semibold.text-gray-900 Vendor Company Description
      %button.text-gray-400.hover:text-gray-600.transition{ onclick: 'closeDescriptionModal()', aria_label: 'Close modal' }
        :plain
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" clip-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"></path>
          </svg>

    .border-t.border-gray-200.pt-4
      #descriptionContent.text-gray-700.text-sm.leading-relaxed.whitespace-pre-wrap.max-h-96.overflow-y-auto
        / Description will be loaded here dynamically


:javascript
  const descriptions = #{ @vendor_requests.map { |r| [r.id, r.description] }.to_h.to_json };

  function openDescriptionModal(requestId) {
    const modal = document.getElementById('descriptionModal');
    const content = document.getElementById('descriptionContent');
    content.textContent = descriptions[requestId] || 'No description available.';
    modal.classList.remove('hidden');
    document.body.classList.add('overflow-hidden');

    // fade in animation
    setTimeout(() => {
      modal.classList.add('opacity-100');
      modal.querySelector('.transform').classList.remove('scale-95');
      modal.querySelector('.transform').classList.add('scale-100');
    }, 10);
  }

  function closeDescriptionModal() {
    const modal = document.getElementById('descriptionModal');
    const contentBox = modal.querySelector('.transform');

    modal.classList.remove('opacity-100');
    contentBox.classList.remove('scale-100');
    contentBox.classList.add('scale-95');

    setTimeout(() => {
      modal.classList.add('hidden');
      document.body.classList.remove('overflow-hidden');
    }, 200);
  }

  // Close modal when clicking outside
  document.getElementById('descriptionModal')?.addEventListener('click', function(e) {
    if (e.target === this) closeDescriptionModal();
  });

  // Close modal with Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') closeDescriptionModal();
  });
