.container.mx-auto.px-4.py-8
  .max-w-5xl.mx-auto
    / Header Actions
    .flex.justify-between.items-center.mb-6
      %h1.text-3xl.font-extrabold.text-blue-900 Invoice Details
      .flex.gap-3
        = link_to admin_vendor_invoices_path(@invoice.vendor), class: 'inline-flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-medium rounded-lg transition-colors duration-200 gap-2' do
          %i.fas.fa-list
          %span All Invoices
        = link_to admin_vendor_path(@invoice.vendor), class: 'inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors duration-200 gap-2' do
          %i.fas.fa-user
          %span View Vendor

    / Main Invoice Card
    .bg-white.shadow-lg.rounded-xl.overflow-hidden
      / Invoice Header
      .bg-gradient-to-r.from-blue-600.to-blue-700.px-8.py-6.text-white
        .flex.justify-between.items-start
          %div
            %h2.text-2xl.font-bold.mb-2 Invoice
            %p.text-blue-100
              Invoice Number:
              %span.font-mono.font-semibold.ml-2= "##{@invoice.id}"
            %p.text-blue-100.text-sm.mt-1
              Created:
              = @invoice.created_at.strftime('%B %d, %Y at %I:%M %p')
          / Status Badge
          - case @invoice.payment_status
          - when 'paid'
            .inline-flex.items-center.px-4.py-2.rounded-full.text-sm.font-semibold.bg-green-500.text-white
              %i.fas.fa-check-circle.mr-2
              Paid
          - when 'pending'
            .inline-flex.items-center.px-4.py-2.rounded-full.text-sm.font-semibold.bg-yellow-500.text-white
              %i.fas.fa-clock.mr-2
              Pending Payment
          - when 'overdue'
            .inline-flex.items-center.px-4.py-2.rounded-full.text-sm.font-semibold.bg-red-500.text-white
              %i.fas.fa-exclamation-circle.mr-2
              Overdue
          - when 'cancelled'
            .inline-flex.items-center.px-4.py-2.rounded-full.text-sm.font-semibold.bg-gray-500.text-white
              %i.fas.fa-ban.mr-2
              Cancelled

      / Invoice Content
      .p-8
        / Vendor Information Section
        .mb-8.pb-8.border-b.border-gray-200
          %h3.text-lg.font-semibold.text-gray-900.mb-4.flex.items-center
            %i.fas.fa-building.text-blue-600.mr-2
            Vendor Information
          .bg-gray-50.rounded-lg.p-6
            .grid.grid-cols-1.md:grid-cols-2.gap-6
              %div
                %p.text-sm.font-medium.text-gray-500.mb-1 Company Name
                %p.text-base.font-semibold.text-gray-900
                  = link_to @invoice.vendor.company_name, admin_vendor_path(@invoice.vendor), class: 'text-blue-600 hover:text-blue-800 hover:underline'
              %div
                %p.text-sm.font-medium.text-gray-500.mb-1 Email
                %p.text-base.text-gray-900= @invoice.vendor.email
              - if @invoice.vendor.phone.present?
                %div
                  %p.text-sm.font-medium.text-gray-500.mb-1 Phone
                  %p.text-base.text-gray-900= @invoice.vendor.phone
              - if @invoice.vendor.address.present?
                %div
                  %p.text-sm.font-medium.text-gray-500.mb-1 Address
                  %p.text-base.text-gray-900= @invoice.vendor.address

        / Invoice Details Section
        .mb-8
          %h3.text-lg.font-semibold.text-gray-900.mb-4.flex.items-center
            %i.fas.fa-file-invoice.text-blue-600.mr-2
            Invoice Details

          .grid.grid-cols-1.md:grid-cols-2.gap-6.mb-6
            / Billing Period Card
            .bg-gradient-to-br.from-blue-50.to-blue-100.rounded-xl.p-6.border.border-blue-200
              .flex.items-start.mb-3
                .bg-blue-200.rounded-lg.p-3.mr-3
                  %i.fas.fa-calendar-alt.text-blue-700.text-xl
                %div
                  %p.text-sm.font-medium.text-blue-700.uppercase Billing Period
                  %p.text-xs.text-blue-600= @invoice.billing_type.capitalize
              %div
                %p.text-sm.text-gray-600.mb-1 From
                %p.text-lg.font-bold.text-gray-900.mb-3= @invoice.from_date.strftime('%B %d, %Y')
                %p.text-sm.text-gray-600.mb-1 To
                %p.text-lg.font-bold.text-gray-900= @invoice.to_date.strftime('%B %d, %Y')

            / Amount & Due Date Card
            .bg-gradient-to-br.from-emerald-50.to-emerald-100.rounded-xl.p-6.border.border-emerald-200
              .flex.items-start.mb-3
                .bg-emerald-200.rounded-lg.p-3.mr-3
                  %i.fas.fa-dollar-sign.text-emerald-700.text-xl
                %div
                  %p.text-sm.font-medium.text-emerald-700.uppercase Amount Due
                  %p.text-3xl.font-bold.text-gray-900.mt-1= number_to_currency(@invoice.amount)
              .mt-4.pt-4.border-t.border-emerald-200
                %p.text-sm.text-gray-600.mb-1 Due Date
                %p.text-lg.font-bold.text-gray-900= @invoice.due_date.strftime('%B %d, %Y')
                - if @invoice.overdue?
                  .mt-2
                    %span.inline-flex.items-center.px-3.py-1.bg-red-100.text-red-800.text-xs.font-bold.rounded-full
                      %i.fas.fa-exclamation-triangle.mr-1
                      OVERDUE

          / Payment Status Information
          - if @invoice.payment_status == 'pending' || @invoice.payment_status == 'overdue'
            .bg-yellow-50.rounded-lg.p-4.border-l-4.border-yellow-400
              .flex.items-start
                %i.fas.fa-info-circle.text-yellow-600.text-lg.mt-1.mr-3
                %div
                  %p.text-sm.font-medium.text-yellow-900.mb-1 Payment Required
                  %p.text-sm.text-yellow-800
                    This invoice is awaiting payment. You can mark it as paid once payment has been received.

        / Action Buttons Section
        %hr.my-8
        .flex.flex-wrap.gap-3
          / Mark as Paid Button
          - if @invoice.payment_status == 'pending' || @invoice.payment_status == 'overdue'
            = button_to mark_as_paid_admin_invoice_path(@invoice), method: :patch, class: 'inline-flex items-center px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg gap-2', data: { turbo_confirm: 'Mark this invoice as paid?' } do
              %i.fas.fa-check-circle
              %span Mark as Paid

          / Edit Button - Opens Modal
          %button.inline-flex.items-center.px-6.py-3.bg-yellow-600.hover:bg-yellow-700.text-white.font-medium.rounded-lg.transition-colors.duration-200.shadow-md.hover:shadow-lg.gap-2{type: 'button', onclick: 'openEditModal()'}
            %i.fas.fa-edit
            %span Edit Invoice

          / Delete Button
          = form_with url: admin_invoice_path(@invoice), method: :delete, local: false, class: 'inline-block' do |f|
            = f.button type: 'submit', class: 'inline-flex items-center px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg gap-2', data: { turbo_confirm: 'Are you sure you want to delete this invoice? This action cannot be undone.' } do
              %i.fas.fa-trash-alt
              %span Delete Invoice

          / Download/Print Button
          %button.inline-flex.items-center.px-6.py-3.bg-purple-600.hover:bg-purple-700.text-white.font-medium.rounded-lg.transition-colors.duration-200.shadow-md.hover:shadow-lg.gap-2{type: 'button', onclick: 'window.print()'}
            %i.fas.fa-print
            %span Print Invoice

    / Invoice Timeline
    .mt-8.bg-white.shadow-lg.rounded-xl.overflow-hidden.p-6
      %h3.text-lg.font-semibold.text-gray-900.mb-4.flex.items-center
        %i.fas.fa-history.text-blue-600.mr-2
        Invoice Timeline
      .space-y-4
        / Created Event
        .flex.items-start
          .bg-blue-100.rounded-full.p-2.mr-4
            %i.fas.fa-plus-circle.text-blue-600
          %div
            %p.text-sm.font-medium.text-gray-900 Invoice Created
            %p.text-xs.text-gray-500= @invoice.created_at.strftime('%B %d, %Y at %I:%M %p')
        
        / Updated Event (if different from created)
        - if @invoice.updated_at != @invoice.created_at
          .flex.items-start
            .bg-yellow-100.rounded-full.p-2.mr-4
              %i.fas.fa-edit.text-yellow-600
            %div
              %p.text-sm.font-medium.text-gray-900 Last Updated
              %p.text-xs.text-gray-500= @invoice.updated_at.strftime('%B %d, %Y at %I:%M %p')
        
        / Payment Status
        - if @invoice.payment_status == 'paid'
          .flex.items-start
            .bg-green-100.rounded-full.p-2.mr-4
              %i.fas.fa-check-circle.text-green-600
            %div
              %p.text-sm.font-medium.text-gray-900 Marked as Paid
              %p.text-xs.text-gray-500 Payment received

/ Edit Invoice Modal
#editInvoiceModal.fixed.inset-0.bg-gray-900.bg-opacity-50.hidden.z-50.overflow-y-auto
  .flex.items-center.justify-center.min-h-screen.px-4.py-6
    .bg-white.rounded-2xl.shadow-2xl.w-full.max-w-3xl.relative.transform.transition-all
      / Modal Header
      .bg-gradient-to-r.from-yellow-600.to-orange-600.px-6.py-4.rounded-t-2xl
        .flex.justify-between.items-center
          %h3.text-xl.font-bold.text-white
            %i.fas.fa-edit.mr-2
            Edit Invoice ##{@invoice.id}
          %button.text-white.hover:text-gray-200.transition-colors{type: 'button', onclick: 'closeEditModal()'}
            %i.fas.fa-times.text-2xl

      / Modal Body
      .p-6
        = form_with(model: [:admin, @invoice.vendor, @invoice], url: admin_invoice_path(@invoice), method: :patch, local: true, html: { class: 'space-y-6' }) do |f|
          / Date Range
          .grid.grid-cols-1.md:grid-cols-2.gap-6
            .space-y-1
              = f.label :from_date, 'Period From', class: 'block text-sm font-medium text-gray-700'
              = f.date_field :from_date, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-yellow-500 focus:ring-yellow-500 sm:text-sm px-4 py-2 border', required: true

            .space-y-1
              = f.label :to_date, 'Period To', class: 'block text-sm font-medium text-gray-700'
              = f.date_field :to_date, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-yellow-500 focus:ring-yellow-500 sm:text-sm px-4 py-2 border', required: true

          / Amount, Due Date, Billing Type
          .grid.grid-cols-1.md:grid-cols-3.gap-6
            .space-y-1
              = f.label :amount, 'Amount', class: 'block text-sm font-medium text-gray-700'
              .mt-1.relative.rounded-md.shadow-sm
                .absolute.inset-y-0.left-0.pl-3.flex.items-center.pointer-events-none
                  %span.text-gray-500.sm:text-sm $
                = f.number_field :amount, step: '0.01', class: 'block w-full pl-7 pr-4 py-2 border border-gray-300 rounded-md focus:ring-yellow-500 focus:border-yellow-500 sm:text-sm', placeholder: '0.00', required: true

            .space-y-1
              = f.label :due_date, 'Due Date', class: 'block text-sm font-medium text-gray-700'
              = f.date_field :due_date, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-yellow-500 focus:ring-yellow-500 sm:text-sm px-4 py-2 border', required: true

            .space-y-1
              = f.label :billing_type, 'Billing Type', class: 'block text-sm font-medium text-gray-700'
              = f.select :billing_type, Invoice::BILLING_TYPES.map { |type| [type.capitalize, type] }, { prompt: 'Select billing type' }, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-yellow-500 focus:ring-yellow-500 sm:text-sm px-4 py-2 border', required: true

          / Payment Status
          .space-y-1
            = f.label :payment_status, 'Payment Status', class: 'block text-sm font-medium text-gray-700'
            = f.select :payment_status, Invoice::PAYMENT_STATUSES.map { |status| [status.capitalize, status] }, {}, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-yellow-500 focus:ring-yellow-500 sm:text-sm px-4 py-2 border'

          / Submit Button
          .flex.items-center.justify-end.gap-4.pt-4
            %button.inline-flex.items-center.px-4.py-2.border.border-gray-300.shadow-sm.text-sm.font-medium.rounded-md.text-gray-700.bg-white.hover:bg-gray-50.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-yellow-500{type: 'button', onclick: 'closeEditModal()'}
              Cancel
            = f.submit 'Update Invoice', class: 'inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500'

:javascript
  function openEditModal() {
    document.getElementById('editInvoiceModal').classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }

  function closeEditModal() {
    document.getElementById('editInvoiceModal').classList.add('hidden');
    document.body.style.overflow = 'auto';
  }

  // Close modal when clicking outside
  document.getElementById('editInvoiceModal')?.addEventListener('click', function(e) {
    if (e.target === this) {
      closeEditModal();
    }
  });

  // Close modal on ESC key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeEditModal();
    }
  });

:css
  @media print {
    .no-print, button, a[href], #editInvoiceModal {
      display: none !important;
    }
    body {
      background: white;
    }
  }